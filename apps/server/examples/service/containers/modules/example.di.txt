import { ContainerModule } from "inversify";
import { TYPES } from "./TYPES";

const controllerBindings = new ContainerModule(({ bind }) => {
	bind<>(TYPES.modules.).to();
	bind<>(TYPES.modules.).to();
	bind<>(TYPES.modules.).to();
});

import { ContainerModule } from 'inversify';
import { MODULE_TYPES } from '../TYPES.di';
import { Controller } from '../../module/controller/controller';
import { Service } from '../../module/service/service';
import { Repository } from '../../module/repository/repository';

export const tracksBindings = new ContainerModule(({ bind }) => {
	bind<Controller>(MODULE_TYPES.modules.tracks.controller).to(Controller);
	bind<Service>(MODULE_TYPES.modules.tracks.service).to(Service);
	bind<Repository>(MODULE_TYPES.modules.tracks.repository).to(Repository);
});
