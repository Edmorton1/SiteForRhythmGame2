services:
  client:
    image: rhythm_game-client:latest
    build:
      context: ./
      dockerfile: Dockerfile.client
    env_file:
      - .env
    ports:
      - '5000:80'
    depends_on:
      - server
  server:
    image: rhythm-game_server:latest
    build:
      context: ./
      dockerfile: Dockerfile.server
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - '3000:80'
  pg:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg-data:/var/lib/postgresql/data
  redis:
    image: redis:latest
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - redis-data:/data

volumes:
  pg-data:
    external: true
    name: 3058037422fc531287fa90f488ec3176b62308567c01d74414b1897833944ab6
  redis-data:
    external: true
    name: 223674e28f20e03dcf7098dd30b8514b55fe7c51faebd6ea8e71d8a588934998
# apk add curl
# docker compose up -d
